range(base$Height)
range(base$Weight)
unique(base$family_history_with_overweight)
for(i in 1:2111){
if(base$family_history_with_overweight[i]=='yes'){
base$family_history_with_overweight[i]<-TRUE
}else{
base$family_history_with_overweight[i]<-FALSE
}
}
unique(base$FAVC)
for(i in 1:2111){
if(base$FAVC[i]=='yes'){
base$FAVC[i]<-TRUE
}else{
base$FAVC[i]<-FALSE
}
}
range(base$FCVC)
range(base$NCP)
unique(base$CAEC)
for(i in 1:2111){
if(base$CAEC[i]=='no'){
base$CAEC[i]<-0
}else if(base$CAEC[i]=='Sometimes'){
base$CAEC[i]<-1
}else if(base$CAEC[i]=='Frequently'){
base$CAEC[i]<-2
}else if(base$CAEC[i]=='Always'){
base$CAEC[i]<-3
}
}
unique(base$SCC)
for(i in 1:2111){
if(base$SCC[i]=='yes'){
base$SCC[i]<-TRUE
}else{
base$SCC[i]<-FALSE
}
}
unique(base$SMOKE)
for(i in 1:2111){
if(base$SMOKE[i]=='yes'){
base$SMOKE[i]<-TRUE
}else{
base$SMOKE[i]<-FALSE
}
}
range(base$CH2O)
range(base$FAF)
range(base$TUE)
unique(base$CALC)
for(i in 1:2111){
if(base$CALC[i]=='no'){
base$CALC[i]<-0
}else if(base$CALC[i]=='Sometimes'){
base$CALC[i]<-1
}else if(base$CALC[i]=='Frequently'){
base$CALC[i]<-2
}else if(base$CALC[i]=='Always'){
base$CALC[i]<-3
}
}
unique(base$MTRANS)
for(i in 1:2111){
if(base$MTRANS[i]=='Automobile'){
base$MTRANS[i]<-1
}else if(base$MTRANS[i]=='Motorbike'){
base$MTRANS[i]<-2
}else if(base$MTRANS[i]=='Public_Transportation'){
base$MTRANS[i]<-3
}else if(base$MTRANS[i]=='Bike'){
base$MTRANS[i]<-4
}else if(base$MTRANS[i]=='Walking'){
base$MTRANS[i]<-5
}
}
unique(base$NObeyesdad)
for(i in 1:2111){
if(base$NObeyesdad[i]=='Insufficient_Weight'){
base$NObeyesdad[i]<-1
}else if(base$NObeyesdad[i]=='Normal_Weight'){
base$NObeyesdad[i]<-2
}else if(base$NObeyesdad[i]=='Overweight_Level_I'){
base$NObeyesdad[i]<-3
}else if(base$NObeyesdad[i]=='Overweight_Level_II'){
base$NObeyesdad[i]<-4
}else if(base$NObeyesdad[i]=='Obesity_Type_I'){
base$NObeyesdad[i]<-5
}else if(base$NObeyesdad[i]=='Obesity_Type_II'){
base$NObeyesdad[i]<-6
}else if(base$NObeyesdad[i]=='Obesity_Type_III'){
base$NObeyesdad[i]<-7
}
}
IMC<-numeric()
for(i in 1:2111){
IMC[i]<-(base$Weight[i])/((base$Height[i])^2)
}
df<-cbind(base,IMC)
base_clean<-subset( df, select = -c(Height, Weight))
View(base_clean)
#write.csv(base_clean, "D:/Documentos/Bedu/R/Proyecto/ObesityDataSet_raw_and_data_sinthetic.csv", row.names=FALSE)
base <- read.csv("D:/Documentos/Bedu/R/Proyecto/ObesityDataSet")
base <- read.csv("D:/Documentos/Bedu/R/Proyecto/ObesityDataSet.csv")
n_tr<-list("Genero", "Edad", "Historial_Familiar", "FAVC", "FCVC", "NCP", "CAEC", "FUMADOR", "C_AGUA", "SCC", "FAF", "TUE", "CALC", "MTRANS", "OBES", "IMC")
colnames(base)<-n_tr
base.cor = cor(base)
View(base.cor)
corrplot(base.cor)
pairs(base,       # Datos
pch = 19, # S?mbolo pch
col = 4,  # Color
main = "Correlaciones",    # T?tulo
gap = 0,           # Distancia entre gr?ficos
row1attop = FALSE, # Direcci?n de la diagonal
labels = colnames(base), # Etiquetas
cex.labels = 0.8,  # Tama?o textos diagonales
font.labels = 1)
modelo<-lm(base$IMC~base$Gender+base$Age+base$family_history_with_overweight+base$FAVC+base$FCVC+base$NCP+
base$CAEC+base$SMOKE+base$CH2O+base$SCC+base$TUE+base$CALC+base$MTRANS)
View(base)
base <- read.csv("D:/Documentos/Bedu/R/Proyecto/ObesityDataSet.csv")
modelo<-lm(base$IMC~base$Gender+base$Age+base$family_history_with_overweight+base$FAVC+base$FCVC+base$NCP+
base$CAEC+base$SMOKE+base$CH2O+base$SCC+base$TUE+base$CALC+base$MTRANS)
hist(residuals(modelo), main= "Histograma de residuales",xlab = "Residuales", ylab="frecuencia")
summary(modelo)
ggplot(df, aes(x = CH2O)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
ggtitle("Distribución de Consumo de Agua Diario (CH2O)")
# Crear un mapa de calor para las correlaciones
# Columnas de interés
data_correlation <- df[, c("CH2O", "TUE", "NObeyesdad")]
# Calcular la matriz de correlación
correlation_matrix <- cor(data_correlation, use = "complete.obs")
df <- base
ggplot(df, aes(x = CH2O)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
ggtitle("Distribución de Consumo de Agua Diario (CH2O)")
# Crear un mapa de calor para las correlaciones
# Columnas de interés
data_correlation <- df[, c("CH2O", "TUE", "NObeyesdad")]
# Calcular la matriz de correlación
correlation_matrix <- cor(data_correlation, use = "complete.obs")
# Crear el mapa de calor
corrplot(correlation_matrix, method = "circle")
# Gráfico de la distribución de TUE
ggplot(df, aes(x = TUE)) +
geom_histogram(bins = 30, fill = "green", color = "black") +
ggtitle("Distribución de Tiempo de Uso de Tecnología (TUE)")
# Gráfico de la distribución de NObeyesdad
ggplot(df, aes(x = factor(NObeyesdad))) +
geom_bar(fill = "red", color = "black") +
ggtitle("Distribución de Nivel de Obesidad (NObeyesdad)")
ind<-subset( base, select = c(Age,family_history_with_overweight,FAVC,FCVC,CAEC,IMC))
n_tr<-list("Edad", "Historial_Familiar", "FAVC", "FCVC", "CAEC","IMC")
colnames(ind)<-n_tr
corind<-cor(ind)
corrplot(corind)
pairs(ind, main = "Correlaciones",col="red", labels = colnames(ind))
modelo2<-lm(ind$IMC~ind$Edad+ind$Historial_Familiar+ind$FAVC+ind$FCVC+ind$CAEC)
hist(residuals(modelo2), main= "Histograma de residuales",xlab = "Residuales", ylab="frecuencia")
summary(modelo2)
set.seed(45)
# Crear índices para dividir los datos
indices <- createDataPartition(df$NObeyesdad, p = 0.75, list = FALSE)
# Dividir los datos en conjuntos de entrenamiento y prueba
datos_entrenamiento <- df[indices, ]
datos_prueba <- df[-indices, ]
modelo_arbol <- rpart(NObeyesdad ~ ., data = datos_entrenamiento, method = "class")
rpart.plot(modelo_arbol, main = "Árbol de Decisión para clasificación de Obesidad")
datos_prueba$predicciones <- predict(modelo_arbol, datos_prueba, type = "class")
matriz_confusion <- confusionMatrix(datos_prueba$predicciones, as.factor(datos_prueba$NObeyesdad))
print(matriz_confusion)
plt <- as.data.frame(matriz_confusion$table)
plt$Reference <- factor(plt$Reference, levels = rev(levels(plt$Reference)))
ggplot(plt, aes(Prediction, Reference, fill = Freq)) +
geom_tile() + geom_text(aes(label = Freq)) +
scale_fill_gradient(low = "#DCD4F9", high = "#4B3F72") +
labs(x = "Predicción", y = "Valor real") +
scale_x_discrete(labels = c("Class_1", "Class_2", "Class_3", "Class_4", "Class_5", "Class_6", "Class_7")) +
scale_y_discrete(labels = c("Class_7", "Class_6", "Class_5", "Class_4", "Class_3", "Class_2", "Class_1"))
data$NObeyesdad <- as.factor(data$NObeyesdad)
data <- df
data$NObeyesdad <- as.factor(data$NObeyesdad)
set.seed(45)
split <- createDataPartition(data$NObeyesdad, p = 0.75, list = FALSE)
train <- data[split,]
test <- data[-split,]
model <- randomForest(NObeyesdad ~ ., data = train, ntree = 500)
pred <- predict(model, test, type = "class")
confusionMatrix(pred, test$NObeyesdad)
matriz_confusion <- confusionMatrix(pred, test$NObeyesdad)
plt <- as.data.frame(matriz_confusion$table)
plt$Reference <- factor(plt$Reference, levels = rev(levels(plt$Reference)))
ggplot(plt, aes(Prediction, Reference, fill = Freq)) +
geom_tile() +
geom_text(aes(label = Freq)) +
scale_fill_gradient(low = "#DCD4F9", high = "#4B3F72") +
labs(x = "Predicción", y = "Valor real") +
scale_x_discrete(labels = c("Class_1", "Class_2", "Class_3", "Class_4", "Class_5", "Class_6", "Class_7")) +
scale_y_discrete(labels = c("Class_7", "Class_6", "Class_5", "Class_4", "Class_3", "Class_2", "Class_1"))
gc()
library(caret)
library(rpart)
library(rpart.plot)
library(ggplot2)
library(corrplot)
library(randomForest)
df <- read.csv("D:/Documentos/Bedu/R/Proyecto/ObesityDataSet_raw_and_data_sinthetic.csv")
View(df)
colSums(is.na(df))
summary(df)
#Age
ggplot(df, aes(x = Age)) +
geom_histogram(binwidth = 1, fill = "purple", color = "black") +
labs(title = "Distribución de Edad")
#Height
ggplot(df, aes(x = Height)) +
geom_histogram(binwidth = 0.1, fill = "purple", color = "black") +
labs(title = "Distribución de Altura")
#Weight
ggplot(df, aes(x = Weight)) +
geom_histogram(binwidth = 1, fill = "purple", color = "black") +
labs(title = "Distribución de peso")
sd(df$Weight)
#FCVC (Frequency of consumption of vegetables)
ggplot(df, aes(x = FCVC)) +
geom_histogram(binwidth = 1, fill = "purple", color = "black") +
labs(title = "Frecuencia del consumo de vegetales")
#NCP (Number of main meals)
ggplot(df, aes(x = NCP)) +
geom_histogram(binwidth = 1, fill = "purple", color = "black") +
labs(title = "Numero de comidas principales")
#CH2O (Consumption of water daily):
ggplot(df, aes(x = CH2O)) +
geom_histogram(binwidth = 0.1, fill = "purple", color = "black") +
labs(title = "Consumo de agua diariamente")
#FAF (Physical activity frequency):
ggplot(df, aes(x = FAF)) +
geom_histogram(binwidth = 1, fill = "purple", color = "black") +
labs(title = "Frecuencia de actividad física")
#TUE (Time using technology devices)
ggplot(df, aes(x = TUE)) +
geom_histogram(binwidth = 1, fill = "purple", color = "black") +
labs(title = "Tiempo usando dispositivos tecnológicos")
ggplot(df, aes(x = family_history_with_overweight)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Frecuencia de Historial Familiar con Sobrepeso", x = "Historial Familiar de Sobrepeso", y = "Frecuencia")
#FAVC (Frequent consumption of high-caloric food)
ggplot(df, aes(x = FAVC)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Frecuencia en elconsumo de alimentos altos en calorías", x = "consumo alto en calorias", y = "Frecuencia")
# CAEC (Consumption of food between meals)
ggplot(df, aes(x = CAEC)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Frecuencia de consumo de alimentos entre comidas", x = "consumo entre comidas", y = "Frecuencia")
#SMOKE: Si fuma
ggplot(df, aes(x = SMOKE)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Fumadores", x = "El paciente es fumador", y = "Frecuencia")
table(df$SMOKE)
#SCC (Caloric beverages consumption)
ggplot(df, aes(x = SCC)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Consumo de bebidas calóricas", x = "El paciente consume bebidas calóricas", y = "Frecuencia")
#CALC (Consumption of alcohol)
ggplot(df, aes(x = CALC)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Consumo de bebidas alcoholicas", x = "El paciente consume bebidas alcoholicas", y = "Frecuencia")
#MTRANS (Mode of transportation)
ggplot(df, aes(x = MTRANS)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Medio de transporte", x = "Medio de transporte", y = "Frecuencia")
table(df$MTRANS)
#NObeyesdad (Obesity level)
ggplot(df, aes(x = NObeyesdad)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Nivel de obesidad", x = "Nivel de obesidad del individuo", y = "Frecuencia")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))  # Rota las etiquetas verticalmente
table(df$NObeyesdad)
base <- df
dim(base)
View(base)
num_na<- complete.cases(base)
sum(num_na)
unique(base$Gender)
for(i in 1:2111){
if(base$Gender[i]=='Female'){
base$Gender[i]<-1
}else{
base$Gender[i]<-2
}
}
range(base$Age)
range(base$Height)
range(base$Weight)
unique(base$family_history_with_overweight)
for(i in 1:2111){
if(base$family_history_with_overweight[i]=='yes'){
base$family_history_with_overweight[i]<-TRUE
}else{
base$family_history_with_overweight[i]<-FALSE
}
}
unique(base$FAVC)
for(i in 1:2111){
if(base$FAVC[i]=='yes'){
base$FAVC[i]<-TRUE
}else{
base$FAVC[i]<-FALSE
}
}
range(base$FCVC)
range(base$NCP)
unique(base$CAEC)
for(i in 1:2111){
if(base$CAEC[i]=='no'){
base$CAEC[i]<-0
}else if(base$CAEC[i]=='Sometimes'){
base$CAEC[i]<-1
}else if(base$CAEC[i]=='Frequently'){
base$CAEC[i]<-2
}else if(base$CAEC[i]=='Always'){
base$CAEC[i]<-3
}
}
unique(base$SCC)
for(i in 1:2111){
if(base$SCC[i]=='yes'){
base$SCC[i]<-TRUE
}else{
base$SCC[i]<-FALSE
}
}
unique(base$SMOKE)
for(i in 1:2111){
if(base$SMOKE[i]=='yes'){
base$SMOKE[i]<-TRUE
}else{
base$SMOKE[i]<-FALSE
}
}
range(base$CH2O)
range(base$FAF)
range(base$TUE)
unique(base$CALC)
for(i in 1:2111){
if(base$CALC[i]=='no'){
base$CALC[i]<-0
}else if(base$CALC[i]=='Sometimes'){
base$CALC[i]<-1
}else if(base$CALC[i]=='Frequently'){
base$CALC[i]<-2
}else if(base$CALC[i]=='Always'){
base$CALC[i]<-3
}
}
unique(base$MTRANS)
for(i in 1:2111){
if(base$MTRANS[i]=='Automobile'){
base$MTRANS[i]<-1
}else if(base$MTRANS[i]=='Motorbike'){
base$MTRANS[i]<-2
}else if(base$MTRANS[i]=='Public_Transportation'){
base$MTRANS[i]<-3
}else if(base$MTRANS[i]=='Bike'){
base$MTRANS[i]<-4
}else if(base$MTRANS[i]=='Walking'){
base$MTRANS[i]<-5
}
}
unique(base$NObeyesdad)
for(i in 1:2111){
if(base$NObeyesdad[i]=='Insufficient_Weight'){
base$NObeyesdad[i]<-1
}else if(base$NObeyesdad[i]=='Normal_Weight'){
base$NObeyesdad[i]<-2
}else if(base$NObeyesdad[i]=='Overweight_Level_I'){
base$NObeyesdad[i]<-3
}else if(base$NObeyesdad[i]=='Overweight_Level_II'){
base$NObeyesdad[i]<-4
}else if(base$NObeyesdad[i]=='Obesity_Type_I'){
base$NObeyesdad[i]<-5
}else if(base$NObeyesdad[i]=='Obesity_Type_II'){
base$NObeyesdad[i]<-6
}else if(base$NObeyesdad[i]=='Obesity_Type_III'){
base$NObeyesdad[i]<-7
}
}
IMC<-numeric()
for(i in 1:2111){
IMC[i]<-(base$Weight[i])/((base$Height[i])^2)
}
df<-cbind(base,IMC)
base_clean<-subset( df, select = -c(Height, Weight))
View(base_clean)
#write.csv(base_clean, "D:/Documentos/Bedu/R/Proyecto/ObesityDataSet_raw_and_data_sinthetic.csv", row.names=FALSE)
base <- read.csv("D:/Documentos/Bedu/R/Proyecto/ObesityDataSet.csv")
n_tr<-list("Genero", "Edad", "Historial_Familiar", "FAVC", "FCVC", "NCP", "CAEC", "FUMADOR", "C_AGUA", "SCC", "FAF", "TUE", "CALC", "MTRANS", "OBES", "IMC")
colnames(base)<-n_tr
base.cor = cor(base)
View(base.cor)
corrplot(base.cor)
pairs(base,       # Datos
pch = 19, # S?mbolo pch
col = 4,  # Color
main = "Correlaciones",    # T?tulo
gap = 0,           # Distancia entre gr?ficos
row1attop = FALSE, # Direcci?n de la diagonal
labels = colnames(base), # Etiquetas
cex.labels = 0.8,  # Tama?o textos diagonales
font.labels = 1)
base <- read.csv("D:/Documentos/Bedu/R/Proyecto/ObesityDataSet.csv")
modelo<-lm(base$IMC~base$Gender+base$Age+base$family_history_with_overweight+base$FAVC+base$FCVC+base$NCP+
base$CAEC+base$SMOKE+base$CH2O+base$SCC+base$TUE+base$CALC+base$MTRANS)
hist(residuals(modelo), main= "Histograma de residuales",xlab = "Residuales", ylab="frecuencia")
summary(modelo)
df <- base
ggplot(df, aes(x = CH2O)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
ggtitle("Distribución de Consumo de Agua Diario (CH2O)")
# Crear un mapa de calor para las correlaciones
# Columnas de interés
data_correlation <- df[, c("CH2O", "TUE", "NObeyesdad")]
# Calcular la matriz de correlación
correlation_matrix <- cor(data_correlation, use = "complete.obs")
# Crear el mapa de calor
corrplot(correlation_matrix, method = "circle")
# Gráfico de la distribución de TUE
ggplot(df, aes(x = TUE)) +
geom_histogram(bins = 30, fill = "green", color = "black") +
ggtitle("Distribución de Tiempo de Uso de Tecnología (TUE)")
# Gráfico de la distribución de NObeyesdad
ggplot(df, aes(x = factor(NObeyesdad))) +
geom_bar(fill = "red", color = "black") +
ggtitle("Distribución de Nivel de Obesidad (NObeyesdad)")
ind<-subset( base, select = c(Age,family_history_with_overweight,FAVC,FCVC,CAEC,IMC))
n_tr<-list("Edad", "Historial_Familiar", "FAVC", "FCVC", "CAEC","IMC")
colnames(ind)<-n_tr
corind<-cor(ind)
corrplot(corind)
pairs(ind, main = "Correlaciones",col="red", labels = colnames(ind))
modelo2<-lm(ind$IMC~ind$Edad+ind$Historial_Familiar+ind$FAVC+ind$FCVC+ind$CAEC)
hist(residuals(modelo2), main= "Histograma de residuales",xlab = "Residuales", ylab="frecuencia")
summary(modelo2)
set.seed(45)
# Crear índices para dividir los datos
indices <- createDataPartition(df$NObeyesdad, p = 0.75, list = FALSE)
# Dividir los datos en conjuntos de entrenamiento y prueba
datos_entrenamiento <- df[indices, ]
datos_prueba <- df[-indices, ]
modelo_arbol <- rpart(NObeyesdad ~ ., data = datos_entrenamiento, method = "class")
rpart.plot(modelo_arbol, main = "Árbol de Decisión para clasificación de Obesidad")
datos_prueba$predicciones <- predict(modelo_arbol, datos_prueba, type = "class")
matriz_confusion <- confusionMatrix(datos_prueba$predicciones, as.factor(datos_prueba$NObeyesdad))
print(matriz_confusion)
plt <- as.data.frame(matriz_confusion$table)
plt$Reference <- factor(plt$Reference, levels = rev(levels(plt$Reference)))
ggplot(plt, aes(Prediction, Reference, fill = Freq)) +
geom_tile() + geom_text(aes(label = Freq)) +
scale_fill_gradient(low = "#DCD4F9", high = "#4B3F72") +
labs(x = "Predicción", y = "Valor real") +
scale_x_discrete(labels = c("Class_1", "Class_2", "Class_3", "Class_4", "Class_5", "Class_6", "Class_7")) +
scale_y_discrete(labels = c("Class_7", "Class_6", "Class_5", "Class_4", "Class_3", "Class_2", "Class_1"))
data <- df
data$NObeyesdad <- as.factor(data$NObeyesdad)
set.seed(45)
split <- createDataPartition(data$NObeyesdad, p = 0.75, list = FALSE)
train <- data[split,]
test <- data[-split,]
model <- randomForest(NObeyesdad ~ ., data = train, ntree = 500)
pred <- predict(model, test, type = "class")
confusionMatrix(pred, test$NObeyesdad)
matriz_confusion <- confusionMatrix(pred, test$NObeyesdad)
plt <- as.data.frame(matriz_confusion$table)
plt$Reference <- factor(plt$Reference, levels = rev(levels(plt$Reference)))
ggplot(plt, aes(Prediction, Reference, fill = Freq)) +
geom_tile() +
geom_text(aes(label = Freq)) +
scale_fill_gradient(low = "#DCD4F9", high = "#4B3F72") +
labs(x = "Predicción", y = "Valor real") +
scale_x_discrete(labels = c("Class_1", "Class_2", "Class_3", "Class_4", "Class_5", "Class_6", "Class_7")) +
scale_y_discrete(labels = c("Class_7", "Class_6", "Class_5", "Class_4", "Class_3", "Class_2", "Class_1"))
base <- read.csv("D:/Documentos/Bedu/R/Proyecto/ObesityDataSet.csv")
n_tr<-list("Genero", "Edad", "Historial_Familiar", "FAVC", "FCVC", "NCP", "CAEC", "FUMADOR", "C_AGUA", "SCC", "FAF", "TUE", "CALC", "MTRANS", "OBES", "IMC")
colnames(base)<-n_tr
base.cor = cor(base)
View(base.cor)
corrplot(base.cor)
base <- read.csv("D:/Documentos/Bedu/R/Proyecto/ObesityDataSet.csv")
modelo<-lm(base$IMC~base$Gender+base$Age+base$family_history_with_overweight+base$FAVC+base$FCVC+base$NCP+
base$CAEC+base$SMOKE+base$CH2O+base$SCC+base$TUE+base$CALC+base$MTRANS)
#hist(residuals(modelo), main= "Histograma de residuales",xlab = "Residuales", ylab="frecuencia")
summary(modelo)
ind<-subset( base, select = c(Age,family_history_with_overweight,FAVC,FCVC,CAEC,IMC))
n_tr<-list("Edad", "Historial_Familiar", "FAVC", "FCVC", "CAEC","IMC")
colnames(ind)<-n_tr
corind<-cor(ind)
corrplot(corind)
#pairs(ind, main = "Correlaciones",col="red", labels = colnames(ind))
modelo2<-lm(ind$IMC~ind$Edad+ind$Historial_Familiar+ind$FAVC+ind$FCVC+ind$CAEC)
#hist(residuals(modelo2), main= "Histograma de residuales",xlab = "Residuales", ylab="frecuencia")
summary(modelo2)
ind<-subset( base, select = c(Age,family_history_with_overweight,FAVC,FCVC,CAEC,IMC))
n_tr<-list("Edad", "Historial_Familiar", "FAVC", "FCVC", "CAEC","IMC")
colnames(ind)<-n_tr
corind<-cor(ind)
corrplot(corind)
install.packages("tinytex")
install.packages("latexpdf")
gc()
